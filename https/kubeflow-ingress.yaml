# apiVersion: extensions/v1beta1
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: kubeflow-ingress-prod
  namespace: kubeflow
  annotations:
    # https://docs.cert-manager.io/en/release-0.11/tasks/issuing-certificates/ingress-shim.html#supported-annotations
    # certmanager.k8s.io/issuer  # < v0.11
    # cert-manager.io/issuer  # >= v0.11
    cert-manager.io/issuer: letsencrypt-prod
    # cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    # On Google Kubernetes Engine,
    # if no annotation is defined under the metadata section,
    # the Ingress Resource uses the L7 load balancer to serve traffic.
    # 'gce' for external LB and 'gce-internal' for internal LB
    # This method can also be forced by setting the annotation's value
    # to gce as shown below:
    # kubernetes.io/ingress.class: gce
    nginx.ingress.kubernetes.io/ssl-redirect: "true" # "true"
    # kubernetes.io/tls-acme: "true"  # < Could not determine issuer for ingress due to bad annotations: failed to determine issuer name to be used for ingress resource
    nginx.ingress.kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:  # < placing a host in the TLS config will indicate a cert should be created
  - hosts:
    - kf.pydemia.org
    secretName: nginx-tls-prod  # < cert-manager will store the created certificate in this secret.
    # `kubectl -n kubeflow describe certificates.cert-manager.io nginx-tls-prod`
  rules:
  - host: kf.pydemia.org
    http:
      paths:
      - path: /
        backend:
          serviceName: centraldashboard
          servicePort: 80
          # serviceName: istio-ingressgateway
          # servicePort: 80
---
# apiVersion: extensions/v1beta1
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: kubeflow-ingress-staging
  namespace: kubeflow
  annotations:
    # https://docs.cert-manager.io/en/release-0.11/tasks/issuing-certificates/ingress-shim.html#supported-annotations
    # certmanager.k8s.io/issuer  # < v0.11
    # cert-manager.io/issuer  # >= v0.11
    cert-manager.io/issuer: letsencrypt-staging
    # cert-manager.io/cluster-issuer: letsencrypt-staging
    kubernetes.io/ingress.class: nginx
    # On Google Kubernetes Engine,
    # if no annotation is defined under the metadata section,
    # the Ingress Resource uses the L7 load balancer to serve traffic.
    # 'gce' for external LB and 'gce-internal' for internal LB
    # This method can also be forced by setting the annotation's value
    # to gce as shown below:
    # kubernetes.io/ingress.class: gce
    nginx.ingress.kubernetes.io/ssl-redirect: "true" # "true"
    # kubernetes.io/tls-acme: "true"  # < Could not determine issuer for ingress due to bad annotations: failed to determine issuer name to be used for ingress resource
    nginx.ingress.kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:  # < placing a host in the TLS config will indicate a cert should be created
  - hosts:
    - kf-dev.pydemia.org
    secretName: nginx-tls-staging  # < cert-manager will store the created certificate in this secret.
    # `kubectl -n kubeflow describe certificates.cert-manager.io nginx-tls-staging`
  rules:
  - host: kf-dev.pydemia.org
    http:
      paths:
      - path: /
        backend:
          serviceName: centraldashboard
          servicePort: 80
---
# # apiVersion: extensions/v1beta1
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: kubeflow-ingress-istio-prod
#   namespace: istio-system
#   annotations:
#     # https://docs.cert-manager.io/en/release-0.11/tasks/issuing-certificates/ingress-shim.html#supported-annotations
#     cert-manager.io/issuer: letsencrypt-prod
#     # cert-manager.io/cluster-issuer: letsencrypt-prod
#     kubernetes.io/ingress.class: nginx
#     # On Google Kubernetes Engine,
#     # if no annotation is defined under the metadata section,
#     # the Ingress Resource uses the L7 load balancer to serve traffic.
#     # This method can also be forced by setting the annotation's value
#     # to gce as shown below:
#     # kubernetes.io/ingress.class: gce
#     nginx.ingress.kubernetes.io/ssl-redirect: "true" # "true"
#     # kubernetes.io/tls-acme: "true"  # < Could not determine issuer for ingress due to bad annotations: failed to determine issuer name to be used for ingress resource
#     nginx.ingress.kubernetes.io/tls-acme: "true"
#     nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   tls:  # < placing a host in the TLS config will indicate a cert should be created
#   - hosts:
#     - kf-dev.pydemia.org
#     secretName: nginx-tls-prod  # < cert-manager will store the created certificate in this secret.
#     # `kubectl -n istio-system describe certificates.cert-manager.io nginx-tls-prod`
#   rules:
#   - host: kf-dev.pydemia.org
#     http:
#       paths:
#       - path: /*
#         backend:
#           serviceName: istio-ingressgateway
#           servicePort: 80
